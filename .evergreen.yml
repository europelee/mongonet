stepback: true

command_type: system

functions:

  "generate expansions":
    - command: shell.exec
      params:
        script: |
          PATCH_DIR=""
          if [ "${is_patch|}" = "true" ]; then
            PATCH_DIR="patch-builds/${version_id}/"
          fi
          echo "patch_dir: $PATCH_DIR" | tee expansions.yml
    - command: expansions.update
      params:
        file: expansions.yml

  "fetch source":
    - command: git.get_project
      params:
        directory: mongonet
    - command: git.apply_patch
      params:
        directory: mongonet

  "fetch mongodb":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -vx
          rm -rf mongodb
          mkdir -p mongodb/bin
          cd mongodb
          curl ${mongo_url} -o mongodb.tgz
          ${decompress} mongodb.tgz
          chmod +x ./mongodb-*/bin/*
          mv ./mongodb-*/bin/* ./bin

  "run unit tests":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -euvx
          ${gorootvars}
          export GOPATH=`pwd`/.gopath
          go test -test.v > unittest.suite
          exitcode=$?
          cat unittest.suite
          exit $exitcode

  "run integration tests mongod mode":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -euvx
          ${gorootvars}
          export GOPATH=`pwd`/.gopath
          export MONGO_DIR=`pwd`/mongodb/bin
          export PATH=$PATH:$MONGO_DIR
          go version
          cd inttests
          sh ./run_integration_tests_mongod_mode.sh

  "run integration tests mongos mode":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -euvx
          ${gorootvars}
          export GOPATH=`pwd`/.gopath
          export MONGO_DIR=`pwd`/mongodb/bin
          export PATH=$PATH:$MONGO_DIR
          go version
          cd inttests
          sh ./run_integration_tests_mongos_mode.sh

  "run go vet":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -euvx
          export GOPATH=`pwd`/.gopath
          ${gorootvars} go version
          ${gorootvars} go vet --composites=false ./...
          exitcode=$?
          exit $exitcode

  "check go fmt":
    - command: shell.exec
      params:
        working_dir: mongonet
        script: |
          set -euvx
          ${gorootvars} go version
          export files_needing_formatting=`${gorootvars} gofmt -l -s -w .`
          echo 'FILES NEEDING FORMATTING:'
          for i in $files_needing_formatting; do echo $i; done
          echo
          test `echo $files_needing_formatting | wc -w` = '0'
          exit $?

tasks:
  - name: RunUnitTests
    priority: 5
    commands:
      - func: "fetch source"
      - func: "fetch mongodb"
      - func: "run unit tests"

  - name: RunIntegrationTestsMongosMode
    priority: 5
    commands:
      - func: "generate expansions"
      - func: "fetch source"
      - func: "fetch mongodb"
      - func: "run integration tests mongos mode"

  - name: RunIntegrationTestsMongodMode
    priority: 5
    commands:
      - func: "generate expansions"
      - func: "fetch source"
      - func: "fetch mongodb"
      - func: "run integration tests mongod mode"

  - name: CheckGoFmt
    commands:
      - func: "fetch source"
      - func: "check go fmt"

  - name: GoVet
    commands:
      - func: "fetch source"
      - func: "run go vet"

post:
  - command: gotest.parse_files
    params:
      files: ["mongonet/unittest.suite"]

  - command: archive.targz_pack
    params:
      target: "archive.tgz"
      source_dir: "mongonet"
      include:
        - "inttests/profiles/*"

  - command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: archive.tgz
      remote_file: mongonet/${patch_dir}archive-${build_id}-${task_name}.tgz
      bucket: mciuploads
      permissions: public-read
      content_type: ${content_type|application/x-gzip}
      display_name: Archive
      optional: true


buildvariants:

- name: rhel7
  display_name: RHEL 7
  expansions:
    mongo_url: https://downloads.mongodb.com/linux/mongodb-linux-x86_64-enterprise-rhel70-4.4.1.tgz
    gorootvars: export PATH="/opt/golang/go1.18/bin:$PATH" GOROOT=/opt/golang/go1.18
  run_on:
    - rhel70
  tasks:
    - "RunUnitTests"
    - "RunIntegrationTestsMongosMode"
    - "RunIntegrationTestsMongodMode"

- name: check-go-fmt
  display_name: Check go fmt (linux)
  run_on:
    - amazon1-2018-test
  expansions:
    gorootvars: PATH="/opt/golang/go1.18/bin:$PATH" GOROOT=/opt/golang/go1.18
  tasks:
    - "CheckGoFmt"

- name: linux-go-vet
  display_name: go vet (Linux)
  run_on:
    - rhel70
  expansions:
    gorootvars: PATH="/opt/golang/go1.18/bin:$PATH" GOROOT=/opt/golang/go1.18
  tasks:
    - "GoVet"
      
